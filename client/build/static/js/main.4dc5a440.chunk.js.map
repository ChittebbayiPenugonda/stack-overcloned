{"version":3,"sources":["UserContext.js","Header.js","Tag.js","When.js","UserLink.js","QuestionRow.js","Header1.js","BlueButtonLink.js","QuestionsPage.js","BlueButton.js","Input.js","PostBodyTextarea.js","AskPage.js","GlobalStyles.js","ErrorBox.js","LoginPage.js","RegisterPage.js","Notifications.js","ProfilePage.js","WhoAndWhen.js","VotingButtons.js","Comment.js","CommentForm.js","BlueLinkButton.js","Comments.js","Header2.js","QuestionPage.js","TagPage.js","UserPage.js","App.js","index.js"],"names":["UserContext","createContext","StyledHeader","styled","header","LogoLink","Link","ProfileLink","Header","user","useContext","to","className","icon","faStackOverflow","size","id","name","email","StyledTag","Tag","When","props","children","replace","substr","length","StyledUserLink","UserLink","QuestionStat","div","QuestionTitleArea","QuestionLink","StyledQuestionRow","WhoAndWhen","QuestionRow","title","tags","author","createdAt","split","map","tag","h1","BlueButtonLink","HeaderRow","QuestionsPage","useState","questions","setQuestions","useEffect","axios","get","withCredentials","then","response","data","Helmet","Header1","style","margin","question","created_at","user_id","BlueButton","button","Input","input","BodyTextarea","textarea","PreviewArea","PostBodyTextarea","onChange","e","handlePostBodyChange","target","value","placeholder","plugins","gfm","Container","AskPage","reactTags","React","createRef","questionTitle","setQuestionTitle","questionBody","setQuestionBody","redirect","setRedirect","setTags","tagSuggestions","setTagSuggestions","marginBottom","onSubmit","ev","preventDefault","post","content","console","log","sendQuestion","type","ref","suggestions","onDelete","indexToDelete","newTags","i","push","onTagDelete","onAddition","chosenTags","onTagAddition","GlobalStyles","createGlobalStyle","StyledErrorBox","ErrorBox","LoginPage","state","password","redirectToHomePage","error","this","context","checkAuth","setState","catch","login","Component","contextType","RegisterPage","redirectToTheHomePage","register","autocomplete","StyledNotification","Notification","ProfilePage","showConfirmation","username","showNotification","editUser","update","handleOnNameChange","onClick","logout","StyledWhoAndWhen","ArrowUp","uservote","ArrowBottom","ArrowButton","Total","VotingButtons","currentTotal","setCurrentTotal","currentUserVote","setCurrentUserVote","handleVoteClick","direction","total","directionName","postId","initialTotal","userVote","initialUserVote","CommentBox","Comment","comment","votes_sum","user_vote","padding","float","author_id","user_name","StyledTextarea","CommentFooter","CommentForm","setContent","onAddCommentClick","addComment","rows","StyledLink","BlueLinkButton","CommentsOuter","Comments","showCommentForm","setShowCommentForm","currentComments","setCurrentComments","comments","initialComments","questionComment","handleAddComment","h2","QuestionMeta","QuestionTitle","PostBody","QuestionPage","match","setQuestion","answerBody","setAnswerBody","setUserVote","voteCount","setVoteCount","questionComments","setQuestionComments","answersComments","setAnswersComments","answers","setAnswers","getQuestion","useCallback","params","voteSum","vote_sum","getQuestionComments","getAnswers","ids","answer","join","getAnswersComments","marginTop","width","filter","parent_id","Header2","postAnswer","TagPage","following","tagName","forEach","getQuestions","getFollowedTags","prevProps","prevState","snapshot","unfollow","follow","Buttons","PostRow","PostPoints","UserPage","userInfo","setUserInfo","votesInfo","setVotesInfo","votesTotal","setVotesTotal","setRedirectToTheHomePage","voteRow","parseInt","voteInfoRow","App","setUser","Promise","resolve","reject","Provider","userProps","newUserInfo","key","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dc5a440.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst UserContext = createContext(null);\r\n\r\nexport default UserContext;","import styled from 'styled-components';\r\nimport {useContext} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStackOverflow } from '@fortawesome/fontawesome-free-brands';\r\nimport {Link} from 'react-router-dom';\r\nimport UserContext from \"./UserContext\";\r\n\r\nconst StyledHeader = styled.header`\r\n  background-color: #393939;\r\n  box-shadow: 0 3px 3px rgba(0,0,0,.2);\r\n  display:grid;\r\n  grid-template-columns: 1fr 200px;\r\n  grid-column-gap: 20px;\r\n`;\r\n\r\nconst LogoLink = styled(Link)`\r\n  color:#fff;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  height: 50px;\r\n  line-height: 30px;\r\n  padding: 0px 15px;\r\n  svg{\r\n    margin-top: 7px;\r\n    display: inline-block;\r\n    float:left;\r\n  }\r\n  span{\r\n    display: inline-block;\r\n    padding-left:5px;\r\n    padding-top: 10px;\r\n    font-size:1.2rem;\r\n    font-weight: 300;\r\n  }\r\n  b{\r\n    font-weight: normal;\r\n    display: inline-block;\r\n    margin-left:2px;\r\n  }\r\n`;\r\n\r\nconst ProfileLink = styled(Link)`\r\n  color:#fff;\r\n  padding: 0 20px;\r\n  text-decoration: none;\r\n  line-height: 50px;\r\n  text-align: right;\r\n`;\r\n\r\nfunction Header() {\r\n  const {user} = useContext(UserContext);\r\n  return (\r\n    <StyledHeader>\r\n      <LogoLink to={'/'} className=\"logo\">\r\n        <FontAwesomeIcon icon={faStackOverflow} size=\"2x\" />\r\n        <span>stack<b>overcloned</b></span>\r\n      </LogoLink>\r\n      {/*<form action=\"\" className=\"search\">*/}\r\n      {/*  <SearchInput type=\"text\" placeholder=\"Search...\"/>*/}\r\n      {/*</form>*/}\r\n      {user && (\r\n        <ProfileLink to={'/users/'+user.id} className=\"profile\">{user.name || user.email}</ProfileLink>\r\n      )}\r\n      {!user && (\r\n        <div>\r\n          <ProfileLink to={'/login'} className=\"profile\">Log in</ProfileLink>\r\n          <ProfileLink to={'/register'} className=\"profile\">Register</ProfileLink>\r\n        </div>\r\n\r\n      )}\r\n    </StyledHeader>\r\n  );\r\n}\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StyledTag = styled(Link)`\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n  background-color: #3e4a52;\r\n  color:#9cc3db;\r\n  padding: 7px;\r\n  border-radius: 4px;\r\n  font-size: .9rem;\r\n  text-decoration: none;\r\n  transition: all .2s ease;\r\n  &:hover{\r\n    background-color: #5e6a72;\r\n    color:#bce3fb;\r\n  }\r\n`;\r\n\r\nfunction Tag({name}) {\r\n  return (<StyledTag to={'/tag/'+name}>{name}</StyledTag>);\r\n}\r\n\r\nTag.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Tag;","function When(props){\r\n  return (props.children.replace('T', ' ').substr(0, props.children.length - 5));\r\n}\r\nexport default When;","import styled from \"styled-components\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StyledUserLink = styled(Link)`\r\n  color: #3ca4ff;\r\n  text-decoration: none;\r\n  &:hover{\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nfunction UserLink(props) {\r\n  return (<StyledUserLink to={'/users/'+props.id} {...props} />);\r\n}\r\n\r\nexport default UserLink;","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nimport Tag from './Tag';\r\nimport When from \"./When\";\r\nimport UserLink from \"./UserLink\";\r\n\r\nconst QuestionStat = styled.div`\r\n  text-align: center;\r\n  display: inline-block;\r\n  font-size: 1.2rem;\r\n  color:#aaa;\r\n  margin-top:7px;\r\n  span{\r\n    font-size:.7rem;\r\n    display: block;\r\n    font-weight: 300;\r\n    margin-top: 4px;\r\n  }\r\n`;\r\nconst QuestionTitleArea = styled.div`\r\n  padding: 0 30px;\r\n`;\r\nconst QuestionLink = styled(Link)`\r\n  text-decoration: none;\r\n  color:#3ca4ff;\r\n  font-size: 1.1rem;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n`;\r\nconst StyledQuestionRow = styled.div`\r\n  background-color: rgba(255,255,255,.05);\r\n  padding: 15px 15px 10px;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 50px) 1fr;\r\n  border-top: 1px solid #555;\r\n`;\r\nconst WhoAndWhen = styled.div`\r\n  display: inline-block;\r\n  color:#aaa;\r\n  font-size: .8rem;\r\n  float:right;\r\n  padding: 10px 0;\r\n`;\r\n\r\nfunction QuestionRow({title,id,tags,author,createdAt}) {\r\n  return (\r\n    <StyledQuestionRow>\r\n      <QuestionStat>0<span>votes</span></QuestionStat>\r\n      <QuestionStat>1<span>answers</span></QuestionStat>\r\n      <QuestionStat>6<span>views</span></QuestionStat>\r\n      <QuestionTitleArea>\r\n        <QuestionLink to={'/questions/'+id}>{title}</QuestionLink>\r\n        <WhoAndWhen>\r\n          <When>{createdAt}</When> <UserLink id={author.id}>{author.name || author.email}</UserLink>\r\n        </WhoAndWhen>\r\n        {tags && tags.split(',').map(tag => (\r\n          <Tag name={tag} />\r\n        ))}\r\n      </QuestionTitleArea>\r\n    </StyledQuestionRow>\r\n  );\r\n}\r\n\r\nQuestionRow.propTypes = {\r\n  createdAt: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  tags: PropTypes.string,\r\n  author: PropTypes.object,\r\n};\r\n\r\nexport default QuestionRow;","import styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.h1`\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nexport default StyledHeader;","import styled from 'styled-components';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst BlueButtonLink = styled(Link)`\r\n  display: inline-block;\r\n  background-color: #378ad3;\r\n  color:#fff;\r\n  border:0;\r\n  border-radius: 5px;\r\n  padding: 12px 10px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default BlueButtonLink;","import styled from 'styled-components';\r\nimport {useState,useEffect} from 'react';\r\nimport QuestionRow from \"./QuestionRow\";\r\nimport Header1 from \"./Header1\";\r\nimport BlueButtonLink from \"./BlueButtonLink\";\r\nimport axios from \"axios\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HeaderRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr min-content;\r\n  padding: 30px 20px;\r\n`;\r\n\r\nfunction QuestionsPage() {\r\n  const [questions,setQuestions] = useState([]);\r\n  function fetchQuestions() {\r\n    axios.get('http://localhost:3030/questions', {withCredentials:true})\r\n      .then(response => setQuestions(response.data));\r\n  }\r\n  useEffect(() => fetchQuestions(), []);\r\n  return (\r\n    <main>\r\n      <Helmet>\r\n        <title>StackOvercloned - home</title>\r\n      </Helmet>\r\n      <HeaderRow>\r\n        <Header1 style={{margin:0}}>Questions</Header1>\r\n        <BlueButtonLink to={'/ask'}>Ask&nbsp;Question</BlueButtonLink>\r\n      </HeaderRow>\r\n      {questions && questions.length > 0 && questions.map(question => (\r\n        <QuestionRow\r\n          title={question.title}\r\n          id={question.id}\r\n          createdAt={question.created_at}\r\n          author={{id: question.user_id, name:question.name, email:question.email}}\r\n          tags={question.tags} />\r\n      ))}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default QuestionsPage;","import styled from 'styled-components';\r\n\r\nconst BlueButton = styled.button`\r\n  background-color: #378ad3;\r\n  color:#fff;\r\n  border:0;\r\n  border-radius: 5px;\r\n  padding: ${props => props.size === 'sm' ? '8px 10px' : '12px 20px'};\r\n  text-decoration: none;\r\n  font-size: ${props => props.size === 'sm' ? '.8rem' : '1.1rem'};\r\n`;\r\n\r\nexport default BlueButton;","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  background:none;\r\n  border: 1px solid #777;\r\n  border-radius: 3px;\r\n  display: block;\r\n  width:100%;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  color:#fff;\r\n`;\r\n\r\nexport default Input;","import styled from \"styled-components\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BodyTextarea = styled.textarea`\r\n  background:none;\r\n  border: 1px solid #777;\r\n  border-radius: 3px;\r\n  display: block;\r\n  width:100%;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  min-height: 200px;\r\n  margin-bottom: 20px;\r\n  color:#fff;\r\n  font-family: inherit;\r\n`;\r\nconst PreviewArea = styled.div`\r\n  padding: 10px 20px;\r\n  background-color: #444;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\n\r\nfunction PostBodyTextarea(props) {\r\n  return (\r\n    <>\r\n      <BodyTextarea\r\n        onChange={e => props.handlePostBodyChange(e.target.value)}\r\n        placeholder={props.placeholder} value={props.value}/>\r\n      {!!props.value && props.value.length > 0 && (\r\n        <PreviewArea>\r\n          <ReactMarkdown plugins={[gfm]} children={props.value} />\r\n        </PreviewArea>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nPostBodyTextarea.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  handlePostBodyChange: PropTypes.any,\r\n};\r\n\r\nexport default PostBodyTextarea;","import styled from 'styled-components';\r\nimport Header1 from \"./Header1\";\r\nimport BlueButton from \"./BlueButton\";\r\nimport Input from './Input';\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ReactTags from 'react-tag-autocomplete';\r\nimport PostBodyTextarea from \"./PostBodyTextarea\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 20px;\r\n`;\r\n\r\nexport default function AskPage() {\r\n\r\n  const reactTags = React.createRef();\r\n\r\n  const [questionTitle,setQuestionTitle] = useState('');\r\n  const [questionBody, setQuestionBody] = useState('');\r\n  const [redirect, setRedirect] = useState('');\r\n  const [tags,setTags] = useState([]);\r\n  const [tagSuggestions,setTagSuggestions] = useState([]);\r\n\r\n  function sendQuestion(ev) {\r\n    ev.preventDefault();\r\n    axios.post('http://localhost:3030/questions', {\r\n      title: questionTitle,\r\n      content: questionBody,\r\n      tags: tags.map(tag => tag.id),\r\n    }, {withCredentials:true})\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRedirect('/questions/'+response.data[0]);\r\n      });\r\n  }\r\n\r\n  function getTags() {\r\n    axios.get('http://localhost:3030/tags')\r\n      .then(response => {\r\n        setTagSuggestions(response.data);\r\n      })\r\n  }\r\n\r\n  function onTagAddition(tag) {\r\n    const chosenTags = tags;\r\n    chosenTags.push(tag);\r\n    setTags(chosenTags);\r\n  }\r\n\r\n  function onTagDelete(indexToDelete) {\r\n    const newTags = [];\r\n    for (let i=0; i<tags.length; i++) {\r\n      if (i !== indexToDelete) {\r\n        newTags.push(tags[i]);\r\n      }\r\n    }\r\n    setTags(newTags);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTags();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {redirect && (\r\n        <Redirect to={redirect} />\r\n      )}\r\n      <Header1 style={{marginBottom:'20px'}}>Ask a public question</Header1>\r\n      <form onSubmit={ev => sendQuestion(ev)}>\r\n        <Input type=\"text\"\r\n               value={questionTitle}\r\n               onChange={e => setQuestionTitle(e.target.value)}\r\n               placeholder=\"Title of your question\" />\r\n        <PostBodyTextarea\r\n          placeholder={\"More info about your question. You can use markdown here\"}\r\n          value={questionBody}\r\n          handlePostBodyChange={value => setQuestionBody(value)} />\r\n        <ReactTags\r\n          ref={reactTags}\r\n          tags={tags}\r\n          suggestions={tagSuggestions}\r\n          onDelete={ev => onTagDelete(ev)}\r\n          onAddition={ev => onTagAddition(ev)} />\r\n        <BlueButton type={'submit'}>Post question</BlueButton>\r\n      </form>\r\n    </Container>\r\n  );\r\n\r\n}","import {createGlobalStyle} from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300,400;700&display=swap');\r\n  body{\r\n    background: #2d2d2d;\r\n    color:#fff;\r\n    font-family: Roboto, sans-serif;\r\n  }\r\n  b,strong{\r\n    font-weight: 700;\r\n  }\r\n  a{\r\n    color:#fff;\r\n  }\r\n  p{\r\n    margin: 10px 0;\r\n    line-height: 1.5rem;\r\n  }\r\n  h1,h2{\r\n    margin-top: 20px;\r\n    margin-bottom: 10px;\r\n  }\r\n  h1{\r\n    font-size: 1.8rem;\r\n  }\r\n  h2{\r\n    font-size: 1.6rem;\r\n  }\r\n  blockquote{\r\n    background-color: rgba(0,0,0,.1);\r\n    padding: 15px;\r\n    border-radius: 4px;\r\n  }\r\n  hr{\r\n    margin: 20px 0;\r\n    border-color:rgba(255,255,255,.1);\r\n  }\r\n  \r\n  // tags\r\n  .react-tags{\r\n    margin-bottom: 20px;\r\n    border: 1px solid #777;\r\n    border-radius: 3px;\r\n    padding: 15px;\r\n  }\r\n  .react-tags__selected{\r\n    display: inline-block;\r\n  }\r\n  .react-tags__selected-tag{\r\n    border:0;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n    background-color: #3e4a52;\r\n    color: #9cc3db;\r\n    padding: 7px;\r\n    border-radius: 4px;\r\n    font-size: .9rem;\r\n  }\r\n  .react-tags__search{\r\n    display: inline-block;\r\n  }\r\n  input.react-tags__search-input,\r\n  input.react-tags__search-input:focus\r\n  {\r\n    outline: none;\r\n    background: none;\r\n    border: none;\r\n    display: block;\r\n    width: 100%;\r\n    min-width: 300px;\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n    color: #fff;\r\n  }\r\n  .react-tags__suggestions{\r\n    position: absolute;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;","import styled from 'styled-components';\r\n\r\nconst StyledErrorBox = styled.div`\r\n  background-color: rgba(255,0,0,.1);\r\n  border: 1px solid red;\r\n  padding: 20px;\r\n  color:#fff;\r\n  margin-bottom: 20px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nfunction ErrorBox(props) {\r\n  return <StyledErrorBox {...props} />;\r\n}\r\n\r\nexport default ErrorBox;","import {Component} from 'react';\r\nimport Header1 from \"./Header1\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"./Input\";\r\nimport BlueButton from \"./BlueButton\";\r\nimport axios from 'axios';\r\nimport UserContext from \"./UserContext\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport ErrorBox from \"./ErrorBox\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 20px;\r\n`;\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      redirectToHomePage: false,\r\n      error: false,\r\n    }\r\n  }\r\n\r\n  login(ev) {\r\n    ev.preventDefault();\r\n    axios.post('http://localhost:3030/login', {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    }, {withCredentials: true})\r\n      .then(() => {\r\n        this.context.checkAuth().then(() => {\r\n          this.setState({error:false,redirectToHomePage: true});\r\n        });\r\n      })\r\n      .catch(() => this.setState({error:true}));\r\n  }\r\n  render() {\r\n    return (<>\r\n      <Helmet>\r\n        <title>StackOvercloned - login</title>\r\n      </Helmet>\r\n      {this.state.redirectToHomePage && (\r\n        <Redirect to={'/'} />\r\n      )}\r\n      <Container>\r\n        <Header1 style={{marginBottom:'20px'}}>Login</Header1>\r\n        {this.state.error && (\r\n          <ErrorBox>Login failed</ErrorBox>\r\n        )}\r\n        <form onSubmit={ev => this.login(ev)}>\r\n          <Input placeholder={'email'} type=\"email\" value={this.state.email}\r\n                 onChange={ev => this.setState({email:ev.target.value})} />\r\n          <Input placeholder={'password'} type=\"password\" value={this.state.password}\r\n                 onChange={ev => this.setState({password:ev.target.value})} />\r\n          <BlueButton type={'submit'}>Login</BlueButton>\r\n        </form>\r\n      </Container>\r\n    </>);\r\n  }\r\n\r\n}\r\n\r\nLoginPage.contextType = UserContext;\r\n\r\nexport default LoginPage;","import {Component} from 'react';\r\nimport Header1 from \"./Header1\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"./Input\";\r\nimport BlueButton from \"./BlueButton\";\r\nimport axios from 'axios';\r\nimport UserContext from \"./UserContext\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport ErrorBox from \"./ErrorBox\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 20px;\r\n`;\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: '',\r\n      redirectToTheHomePage: false,\r\n      error: false,\r\n    }\r\n  }\r\n\r\n  register(ev) {\r\n    ev.preventDefault();\r\n    axios.post('http://localhost:3030/register', {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      name: this.state.name,\r\n    }, {withCredentials: true})\r\n      .then(() => {\r\n        this.context.checkAuth()\r\n          .then(() => this.setState({error:false,redirectToTheHomePage:true}));\r\n      })\r\n      .catch(error => {\r\n        this.setState({error:error.response.data});\r\n      });\r\n  }\r\n  render() {\r\n    return (<>\r\n      <Helmet>\r\n        <title>StackOvercloned - register</title>\r\n      </Helmet>\r\n      {this.state.redirectToTheHomePage && (\r\n        <Redirect to={'/'} />\r\n      )}\r\n      <Container>\r\n        <Header1 style={{marginBottom:'20px'}}>Register</Header1>\r\n        {this.state.error && (\r\n          <ErrorBox>{this.state.error}</ErrorBox>\r\n        )}\r\n        <form onSubmit={ev => this.register(ev)}>\r\n          <Input placeholder={'email'} type=\"email\" value={this.state.email}\r\n                 onChange={ev => this.setState({email:ev.target.value})} />\r\n          <Input placeholder={'your name'} type=\"text\" value={this.state.name}\r\n                 onChange={ev => this.setState({name:ev.target.value})} />\r\n          <Input placeholder={'password'} type=\"password\" value={this.state.password}\r\n                 autocomplete={'new-password'}\r\n                 onChange={ev => this.setState({password:ev.target.value})} />\r\n          <BlueButton type={'submit'}>Register</BlueButton>\r\n        </form>\r\n      </Container>\r\n    </>);\r\n  }\r\n\r\n}\r\n\r\nRegisterPage.contextType = UserContext;\r\n\r\nexport default RegisterPage;","import styled from 'styled-components';\r\n\r\nconst StyledNotification = styled.div`\r\n  background-color: rgba(0,255,0,.1);\r\n  border: 1px solid green;\r\n  padding: 20px;\r\n  color:#fff;\r\n  margin-bottom: 20px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nfunction Notification(props) {\r\n  return <StyledNotification {...props} />;\r\n}\r\n\r\nexport default Notification;","import {Component} from 'react';\r\nimport Header1 from \"./Header1\";\r\nimport styled from \"styled-components\";\r\nimport BlueButton from \"./BlueButton\";\r\nimport axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport UserContext from \"./UserContext\";\r\nimport Input from \"./Input\";\r\nimport Notification from \"./Notifications\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 20px;\r\n`;\r\n\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showConfirmation: false,\r\n      redirectToTheHomePage: false,\r\n      username: '',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      username: this.context.user ? this.context.user.name : '',\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    axios.post('http://localhost:3030/logout', {}, {withCredentials: true})\r\n      .then(() => {\r\n        this.context.checkAuth().catch(() => this.setState({redirectToTheHomePage:true}));\r\n      });\r\n  }\r\n  update(ev) {\r\n    ev.preventDefault();\r\n    const data = {name:this.context.user.name};\r\n    axios.post('http://localhost:3030/profile', data, {withCredentials:true})\r\n      .then(() => this.setState({showNotification:true}));\r\n  }\r\n  handleOnNameChange(ev) {\r\n    this.setState({username:ev.target.value});\r\n    this.context.editUser({name:ev.target.value});\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>StackOvercloned - your profile</title>\r\n        </Helmet>\r\n        {this.state.redirectToTheHomePage && (\r\n          <Redirect to={'/'} />\r\n        )}\r\n        <Container>\r\n          <Header1>Profile</Header1>\r\n          {this.state.showConfirmation && (\r\n            <Notification>Your profile has been updated!</Notification>\r\n          )}\r\n          <UserContext>{({user}) => {\r\n            if (user) {\r\n              return (\r\n                <>\r\n                  <form onSubmit={ev => this.update(ev)}>\r\n                    <Input placeholder={'Your name'} value={this.state.username}\r\n                           onChange={ev => this.handleOnNameChange(ev)} />\r\n                    <BlueButton>Update profile</BlueButton>\r\n                  </form>\r\n                  <hr />\r\n                  <BlueButton onClick={() => this.logout()}>Logout</BlueButton>\r\n                </>\r\n              );\r\n            } else {\r\n              return (<p>You are not logged in</p>);\r\n            }\r\n          }}</UserContext>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nProfilePage.contextType = UserContext;\r\n\r\nexport default ProfilePage;","import styled from \"styled-components\";\r\n\r\nconst StyledWhoAndWhen = styled.div`\r\n  display: inline-block;\r\n  color:#aaa;\r\n  font-size: .8rem;\r\n  float:right;\r\n  text-align: right;\r\n  padding: 10px 0;\r\n`;\r\n\r\nfunction WhoAndWhen(props) {\r\n  return (<StyledWhoAndWhen {...props} />);\r\n}\r\n\r\nexport default WhoAndWhen;","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport axios from \"axios\";\r\nimport {useState} from 'react';\r\n\r\nconst ArrowUp = styled.div`\r\n  width: 0;\r\n  height: 0;\r\n  border-left: ${props => props.size === 'sm' ? '10px' : '20px'} solid transparent;\r\n  border-right: ${props => props.size === 'sm' ? '10px' : '20px'} solid transparent;\r\n  border-bottom: ${props => props.size === 'sm' ? '10px' : '20px'} solid ${props => props.uservote===1 ? '#f48024' : '#888'};\r\n`;\r\nconst ArrowBottom = styled.div`\r\n  width: 0;\r\n  height: 0;\r\n  border-left: ${props => props.size === 'sm' ? '10px' : '20px'} solid transparent;\r\n  border-right: ${props => props.size === 'sm' ? '10px' : '20px'} solid transparent;\r\n  border-top: ${props => props.size === 'sm' ? '10px' : '20px'} solid ${props => props.uservote===-1 ? '#f48024' : '#888'};\r\n  padding:0;\r\n`;\r\nconst ArrowButton = styled.button`\r\n  border:0;\r\n  background:none;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  padding:0;\r\n`;\r\nconst Total = styled.div`\r\n  text-align: center;\r\n  width: ${props => props.size === 'sm' ? '20px' : '40px'};\r\n  padding: ${props => props.size === 'sm' ? '2px 0 3px' : '7px 0 7px'};\r\n  font-size: ${props => props.size === 'sm' ? '.8rem' : '1.4rem'};\r\n  line-height: ${props => props.size === 'sm' ? '.6rem' : '1.4rem'};\r\n  color: #888;\r\n`;\r\n\r\nfunction VotingButtons(props) {\r\n  const [currentTotal,setCurrentTotal] = useState(0);\r\n  const [currentUserVote,setCurrentUserVote] = useState(null);\r\n  function handleVoteClick(direction) {\r\n    if (direction === currentUserVote) {\r\n      setCurrentUserVote(null);\r\n      setCurrentTotal( direction===1 ? total-1 : total+1 );\r\n    } else {\r\n      setCurrentUserVote(direction);\r\n      setCurrentTotal(total + direction - currentUserVote);\r\n    }\r\n    const directionName = direction === 1 ? 'up' : 'down';\r\n    axios.post('http://localhost:3030/vote/'+directionName+'/'+props.postId, {}, {withCredentials:true})\r\n      .then(response => {\r\n        setCurrentTotal(response.data);\r\n      });\r\n  }\r\n  const total = currentTotal || props.initialTotal || 0;\r\n  const userVote = currentUserVote === null ? props.initialUserVote : currentUserVote;\r\n  return (\r\n    <div {...props}>\r\n      <ArrowButton onClick={() => handleVoteClick(1)}>\r\n        <ArrowUp size={props.size} uservote={userVote} />\r\n      </ArrowButton>\r\n      <Total size={props.size}>{total}</Total>\r\n      <ArrowButton onClick={() => handleVoteClick(-1)}>\r\n        <ArrowBottom size={props.size} uservote={userVote} />\r\n      </ArrowButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nVotingButtons.propTypes = {\r\n  initialTotal: PropTypes.number.isRequired,\r\n  initialUserVote: PropTypes.number,\r\n  postId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default VotingButtons;","import VotingButtons from \"./VotingButtons\";\r\nimport WhoAndWhen from \"./WhoAndWhen\";\r\nimport UserLink from \"./UserLink\";\r\nimport styled from \"styled-components\";\r\nimport When from \"./When\";\r\n\r\nconst CommentBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 20px 1fr;\r\n  column-gap: 15px;\r\n  border-bottom: 1px solid rgba(255,255,255,.1);\r\n  padding: 10px 0;\r\n  font-size: .8rem;\r\n  line-height: 1.0rem;\r\n  color:#ddd;\r\n`;\r\n\r\nfunction Comment(props) {\r\n  return (\r\n    <CommentBox>\r\n      <VotingButtons size={'sm'}\r\n                     postId={props.comment.id}\r\n                     initialTotal={props.comment.votes_sum===null ? 0 : props.comment.votes_sum}\r\n                     initialUserVote={props.comment.user_vote} />\r\n      <div>\r\n        {props.comment.content}\r\n        <WhoAndWhen style={{padding:0,float:'none'}}>\r\n          &nbsp;–&nbsp;\r\n          <UserLink id={props.comment.author_id}>{props.comment.user_name || props.comment.email}</UserLink>\r\n          &nbsp;<When>{props.comment.created_at}</When>\r\n        </WhoAndWhen>\r\n      </div>\r\n\r\n    </CommentBox>\r\n  );\r\n}\r\n\r\nexport default Comment;","import styled from 'styled-components';\r\nimport BlueButton from \"./BlueButton\";\r\nimport {useState} from 'react';\r\n\r\nconst StyledTextarea = styled.textarea`\r\n  background:none;\r\n  border: 1px solid #777;\r\n  border-radius: 3px;\r\n  display: block;\r\n  width:100%;\r\n  box-sizing: border-box;\r\n  padding: 8px;\r\n  line-height: 1.3rem;\r\n  margin-bottom: 20px;\r\n  color:#fff;\r\n  font-family: inherit;\r\n`;\r\nconst CommentFooter = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nfunction CommentForm(props) {\r\n  const [content, setContent] = useState('');\r\n  function addComment(ev) {\r\n    ev.preventDefault();\r\n    props.onAddCommentClick(content);\r\n    setContent('');\r\n  }\r\n  return (\r\n    <form onSubmit={ev => addComment(ev)}>\r\n      <StyledTextarea rows={3}\r\n                      value={content}\r\n                      onChange={ev => setContent(ev.target.value)}\r\n                      style={{marginBottom:'10px'}}\r\n                      placeholder={'Use comments to ask for more information or suggest improvements. Avoid answering questions in comments.'} />\r\n      <CommentFooter>\r\n        <BlueButton\r\n          type={'submit'}\r\n          size={'sm'}>Add comment</BlueButton>\r\n      </CommentFooter>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CommentForm;","import styled from \"styled-components\";\r\n\r\nconst StyledLink = styled.button`\r\n  color: #3ca4ff;\r\n  background:none;\r\n  border:0;\r\n  cursor: pointer;\r\n  padding:0;\r\n  &:hover{\r\n    color: #1c84df;\r\n  }\r\n`;\r\n\r\nfunction BlueLinkButton(props) {\r\n  return (<StyledLink {...props} />);\r\n}\r\n\r\nexport default BlueLinkButton;","import Comment from \"./Comment\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport BlueLinkButton from \"./BlueLinkButton\";\r\nimport styled from \"styled-components\";\r\nimport {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CommentsOuter = styled.div`\r\n  margin-left: 70px;\r\n  border-top: 1px solid rgba(255,255,255,.1);\r\n`;\r\n\r\nfunction Comments(props) {\r\n  const [showCommentForm,setShowCommentForm] = useState(false);\r\n  const [currentComments,setCurrentComments] = useState([]);\r\n  function handleAddComment(content) {\r\n    axios.post('http://localhost:3030/posts', {content,postId:props.postId,type:'comment'}, {withCredentials:true})\r\n      .then(response => {\r\n        setCurrentComments(response.data);\r\n        setShowCommentForm(false);\r\n      });\r\n  }\r\n  const comments = currentComments.length===0 ? props.initialComments : currentComments;\r\n  return (\r\n    <CommentsOuter>\r\n      {comments.map(questionComment => (\r\n        <Comment comment={questionComment} />\r\n      ))}\r\n      {showCommentForm && (\r\n        <CommentForm onAddCommentClick={content => handleAddComment(content)} />\r\n      )}\r\n      {!showCommentForm && (\r\n        <BlueLinkButton\r\n          onClick={() => setShowCommentForm(true)}\r\n          style={{padding:'10px 0'}}>\r\n          Add a comment\r\n        </BlueLinkButton>\r\n      )}\r\n    </CommentsOuter>\r\n  );\r\n}\r\n\r\nComments.propTypes = {\r\n  initialComments: PropTypes.array.isRequired,\r\n  postId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Comments;","import styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.h2`\r\n  font-size: 1.6rem;\r\n`;\r\n\r\nexport default StyledHeader;","import {useCallback, useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Header1 from \"./Header1\";\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport Tag from \"./Tag\";\r\nimport WhoAndWhen from \"./WhoAndWhen\";\r\nimport UserLink from \"./UserLink\";\r\nimport VotingButtons from \"./VotingButtons\";\r\nimport Comments from \"./Comments\";\r\nimport Header2 from \"./Header2\";\r\nimport PostBodyTextarea from \"./PostBodyTextarea\";\r\nimport BlueButton from \"./BlueButton\";\r\nimport When from \"./When\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 20px;\r\n`;\r\nconst QuestionMeta = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\nconst QuestionTitle = styled(Header1)`\r\n  border-bottom: 1px solid rgba(255,255,255,.1);\r\n  padding-bottom: 10px;\r\n`;\r\nconst PostBody = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 50px 1fr;\r\n  column-gap: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nfunction QuestionPage({match}) {\r\n  const [question,setQuestion] = useState(false);\r\n  const [answerBody,setAnswerBody] = useState('');\r\n  const [tags,setTags] = useState([]);\r\n  const [userVote,setUserVote] = useState(0);\r\n  const [voteCount,setVoteCount] = useState(0);\r\n  const [questionComments,setQuestionComments] = useState([]);\r\n  const [answersComments,setAnswersComments] = useState([]);\r\n  const [answers,setAnswers] = useState([]);\r\n\r\n  const getQuestion = useCallback(() => {\r\n    axios.get('http://localhost:3030/questions/'+match.params.id, {withCredentials:true})\r\n      .then(response => {\r\n        setQuestion(response.data.question);\r\n        const voteSum = response.data.question.vote_sum;\r\n        setVoteCount(voteSum === null ? 0 : voteSum);\r\n        setUserVote(response.data.question.user_vote);\r\n        setTags(response.data.tags);\r\n      });\r\n  }, [match.params.id]);\r\n  const getQuestionComments = useCallback(() => {\r\n    axios.get('http://localhost:3030/posts/comments/'+match.params.id, {withCredentials:true})\r\n      .then(response => {\r\n        setQuestionComments(response.data);\r\n      });\r\n  }, [match.params.id]);\r\n  function getAnswersComments(answers) {\r\n    const ids = answers.map(answer => answer.id).join(',');\r\n    axios.get('http://localhost:3030/posts/comments/'+(ids), {withCredentials:true})\r\n      .then(response => {\r\n        setAnswersComments(response.data);\r\n      });\r\n  }\r\n  const getAnswers = useCallback(() => {\r\n    axios.get('http://localhost:3030/posts/answers/'+match.params.id, {withCredentials:true})\r\n      .then(response => {\r\n        setAnswers(response.data);\r\n        getAnswersComments(response.data);\r\n      });\r\n  }, [match.params.id]);\r\n  function postAnswer(ev) {\r\n    ev.preventDefault();\r\n    const data = {postId: question.id, content: answerBody, type:'answer'};\r\n    axios.post('http://localhost:3030/posts', data, {withCredentials:true})\r\n      .then(response => {\r\n        setAnswerBody('');\r\n        setAnswers(response.data);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getQuestion();\r\n    getAnswers();\r\n    getQuestionComments();\r\n  }, [getQuestion, getAnswers, getQuestionComments]);\r\n  return (\r\n    <>\r\n      <Container>\r\n        {question && (\r\n          <>\r\n            <Helmet>\r\n              <title>{question.title} - StackOvercloned</title>\r\n            </Helmet>\r\n            <QuestionTitle>{question.title}</QuestionTitle>\r\n            <PostBody>\r\n              <VotingButtons style={{marginTop:'10px'}}\r\n                             initialTotal={voteCount}\r\n                             initialUserVote={userVote}\r\n                             postId={question.id} />\r\n              <div>\r\n                <ReactMarkdown plugins={[gfm]} children={question.content} />\r\n                <QuestionMeta>\r\n                  <div>\r\n                    {tags.map(tag => (\r\n                      <Tag key={'tag'+tag.id} name={tag.name} />\r\n                    ))}\r\n                  </div>\r\n                  <WhoAndWhen><When>{question.created_at}</When> <UserLink>{question.name || question.email}</UserLink></WhoAndWhen>\r\n                </QuestionMeta>\r\n              </div>\r\n            </PostBody>\r\n          </>\r\n        )}\r\n\r\n        {questionComments && (\r\n          <Comments initialComments={questionComments} postId={question.id} />\r\n        )}\r\n\r\n\r\n        {answers.map(answer => (\r\n          <div>\r\n            <hr/>\r\n            <PostBody>\r\n              <VotingButtons style={{marginTop:'10px'}}\r\n                             initialTotal={answer.votes_sum}\r\n                             initialUserVote={answer.user_vote}\r\n                             postId={answer.id} />\r\n              <div>\r\n                <ReactMarkdown plugins={[gfm]} children={answer.content} />\r\n                <WhoAndWhen style={{float:'none',width:'100%'}}>\r\n                  <When>{answer.created_at}</When>&nbsp;\r\n                  <UserLink id={answer.author_id}>{answer.user_name || answer.email}</UserLink>\r\n                </WhoAndWhen>\r\n              </div>\r\n            </PostBody>\r\n            <Comments\r\n              initialComments={answersComments.filter(comment => comment.parent_id === answer.id)}\r\n              postId={answer.id} />\r\n          </div>\r\n        ))}\r\n\r\n        <hr/>\r\n        <Header2 style={{margin:'30px 0 20px'}}>Your Answer</Header2>\r\n        <PostBodyTextarea\r\n          value={answerBody}\r\n          placeholder={'Your answer goes here. You can use markdown'}\r\n          handlePostBodyChange={value => setAnswerBody(value)} />\r\n        <BlueButton onClick={ev => postAnswer(ev)}>Post your answer</BlueButton>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuestionPage;","import styled from \"styled-components\";\r\nimport Header1 from \"./Header1\";\r\nimport BlueButton from \"./BlueButton\";\r\nimport {Component} from 'react';\r\nimport axios from 'axios';\r\nimport QuestionRow from \"./QuestionRow\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HeaderRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr min-content;\r\n  padding: 30px 20px;\r\n`;\r\n\r\nclass TagPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      following: false,\r\n      questions: [],\r\n    };\r\n  }\r\n\r\n  follow() {\r\n    const data = {tagName: this.props.match.params.name};\r\n    axios.post('http://localhost:3030/tags/follow', data, {withCredentials: true})\r\n      .then(() => this.setState({following:true}));\r\n  }\r\n\r\n  unfollow() {\r\n    const data = {tagName: this.props.match.params.name};\r\n    axios.post('http://localhost:3030/tags/unfollow', data, {withCredentials: true})\r\n      .then(() => this.setState({following:false}));\r\n  }\r\n\r\n  getQuestions() {\r\n    axios.get('http://localhost:3030/questions?tagName='+this.props.match.params.name)\r\n      .then(response => this.setState({questions:response.data}));\r\n  }\r\n\r\n  getFollowedTags() {\r\n    this.setState({following:false});\r\n    axios.get('http://localhost:3030/tags', {withCredentials:true})\r\n      .then(response => {\r\n        response.data.forEach(tag => {\r\n          if (tag.name === this.props.match.params.name && tag.user_id) {\r\n            this.setState({following:true});\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n    this.getFollowedTags();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(prevProps.match.params.name !== this.props.match.params.name) {\r\n     this.getQuestions();\r\n     this.getFollowedTags();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const match = this.props.match;\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>StackOvercloned - {match.params.name} questions</title>\r\n        </Helmet>\r\n        <HeaderRow>\r\n          <Header1>{match.params.name}</Header1>\r\n          {this.state.following && (\r\n            <BlueButton onClick={() => this.unfollow()}>UNFollow</BlueButton>\r\n          )}\r\n          {!this.state.following && (\r\n            <BlueButton onClick={() => this.follow()}>Follow</BlueButton>\r\n          )}\r\n        </HeaderRow>\r\n        <main>\r\n          {this.state.questions && this.state.questions.length > 0 && this.state.questions.map(question => (\r\n            <QuestionRow id={question.id} title={question.title}\r\n                         createdAt={question.created_at}\r\n                         tags={question.tags}\r\n                         author={{email:question.email}} />\r\n          ))}\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagPage;","import Header1 from \"./Header1\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport {useEffect, useState, useContext} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Header2 from \"./Header2\";\r\nimport BlueButtonLink from \"./BlueButtonLink\";\r\nimport UserContext from \"./UserContext\";\r\nimport BlueButton from \"./BlueButton\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 20px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 200px;\r\n`;\r\nconst Buttons = styled.div`\r\n  text-align:right;\r\n`;\r\nconst PostRow = styled(Link)`\r\n  background-color: rgba(255,255,255,.05);\r\n  padding: 15px 15px 10px;\r\n  display: grid;\r\n  grid-template-columns: 30px 1fr;\r\n  column-gap: 20px;\r\n  border-top: 1px solid #555;\r\n  text-decoration: none;\r\n`;\r\nconst PostPoints = styled.div`\r\n  color: #bbb;\r\n  font-size: 2rem;\r\n  text-align: right;\r\n`;\r\n\r\nfunction UserPage({match}) {\r\n\r\n  const [userInfo,setUserInfo] = useState(null);\r\n  const [votesInfo,setVotesInfo] = useState(null);\r\n  const [votesTotal,setVotesTotal] = useState(0);\r\n  const {user,checkAuth} = useContext(UserContext);\r\n  const [redirectToTheHomePage, setRedirectToTheHomePage] = useState(false);\r\n\r\n  function logout() {\r\n    axios.post('http://localhost:3030/logout', {}, {withCredentials: true})\r\n      .then(() => {\r\n        checkAuth().catch(() => setRedirectToTheHomePage(true));\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    function getUserInfo() {\r\n      axios.get('http://localhost:3030/users/'+match.params.id)\r\n        .then(response => {\r\n          setUserInfo(response.data.user);\r\n          setVotesInfo(response.data.votesInfo);\r\n          let total = 0;\r\n          response.data.votesInfo.forEach(voteRow => {\r\n            total+= voteRow.votes_sum;\r\n          });\r\n          setVotesTotal(total);\r\n        });\r\n    }\r\n    getUserInfo();\r\n  }, [match.params.id]);\r\n\r\n  if (redirectToTheHomePage) {\r\n    return (<Redirect to={'/'} />);\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      {!!userInfo && (\r\n        <Helmet>\r\n          <title>User: {userInfo.name} - StackOvercloned</title>\r\n        </Helmet>\r\n      )}\r\n      <Container>\r\n        <div>\r\n          <Header1>{userInfo && userInfo.name}</Header1>\r\n          <Header2>Total points: {votesTotal}</Header2>\r\n        </div>\r\n        <Buttons>\r\n          {!!userInfo && !!user && parseInt(match.params.id) === user.id && (\r\n            <>\r\n              <BlueButtonLink to={'/profile'} style={{marginBottom:'10px'}}>Edit profile</BlueButtonLink>\r\n              <br />\r\n              <BlueButton onClick={() => logout()}>Logout</BlueButton>\r\n            </>\r\n          )}\r\n        </Buttons>\r\n      </Container>\r\n      <ul>\r\n        {votesInfo && votesInfo.map(voteInfoRow => (\r\n          <PostRow to={'/questions/'+(voteInfoRow.parent_id || voteInfoRow.id)}>\r\n            <PostPoints>{voteInfoRow.votes_sum}</PostPoints>\r\n            <div>{voteInfoRow.title || voteInfoRow.content}</div>\r\n          </PostRow>\r\n        ))}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default UserPage;","import {useState, useEffect} from 'react';\r\nimport { Reset } from 'styled-reset';\r\nimport Header from \"./Header\";\r\nimport QuestionsPage from \"./QuestionsPage\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport AskPage from \"./AskPage\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\nimport UserContext from \"./UserContext\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport axios from \"axios\";\r\nimport RegisterPage from \"./RegisterPage\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport QuestionPage from \"./QuestionPage\";\r\nimport TagPage from \"./TagPage\";\r\nimport UserPage from \"./UserPage\";\r\n\r\nfunction App() {\r\n  const [user,setUser] = useState(null);\r\n\r\n  function checkAuth() {\r\n    return new Promise(((resolve, reject) => {\r\n      axios.get('http://localhost:3030/profile', {withCredentials:true})\r\n        .then(response => {\r\n          setUser({\r\n            email:response.data.email,\r\n            name: response.data.name,\r\n            id: response.data.id,\r\n          });\r\n          resolve(response.data);\r\n        })\r\n        .catch(() => {\r\n          setUser(null);\r\n          reject(null);\r\n        });\r\n    }));\r\n\r\n  }\r\n\r\n  function editUser(userProps) {\r\n    let newUserInfo = user;\r\n    for (let key in userProps) {\r\n      newUserInfo[key] = userProps[key];\r\n      console.log(key, userProps[key], newUserInfo);\r\n    }\r\n    setUser(newUserInfo);\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Reset />\r\n      <GlobalStyles />\r\n      <Router>\r\n        <UserContext.Provider value={{user, checkAuth, editUser}}>\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/ask\" component={AskPage} />\r\n            <Route path=\"/profile\" component={ProfilePage} />\r\n            <Route path=\"/login\" component={LoginPage} />\r\n            <Route path=\"/register\" component={RegisterPage} />\r\n            <Route path=\"/questions/:id\" component={QuestionPage} />\r\n            <Route path=\"/tag/:name\" component={TagPage} />\r\n            <Route path=\"/users/:id\" component={UserPage} />\r\n            <Route path=\"/\" component={QuestionsPage} />\r\n          </Switch>\r\n        </UserContext.Provider>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}